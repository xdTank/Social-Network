{"version":3,"file":"static/js/218.de4c995a.chunk.js","mappings":"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","sources":["webpack://first-project/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://first-project/./src/components/Profile/Myposts/Myposts.module.css?f0a2","components/Profile/Myposts/Myposts.jsx","components/Profile/Myposts/MypostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ava\":\"ProfileInfo_ava__2kiHq\",\"profileBlock\":\"ProfileInfo_profileBlock__nMvag\",\"contacts\":\"ProfileInfo_contacts__jqWMI\"};","import React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nconst StatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMede] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMede(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMede(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <b>Status</b>: <span onDoubleClick={activateEditMode} >{props.status || \"-\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatusWithHooks","import React from \"react\"\r\nimport { Input, Textarea, createField } from \"../../../FormsControl/FormsControl\"\r\nimport { reduxForm } from \"redux-form\"\r\nimport style from \"../../../FormsControl/FormsControl.module.css\"\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        {error && <div className={style.formSummeryError}>{error}</div>}\r\n        <div>\r\n            <button>Save</button>\r\n        </div>\r\n        <div>\r\n            <b>Full Name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n        </div>\r\n        <div>\r\n            <b>Description</b>: {createField(\"Description\", \"lookingForAJobDescription\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>About me</b>: {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key}>\r\n                    <b>{key}</b>: {createField(key, \"contacts\" + key, [], Input)}\r\n                </div>\r\n            })}\r\n        </div>\r\n\r\n    </form >\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm","import React, { useState } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport StatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/img/44884218_345707102882519_2446069589734326272_n.jpg\"\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\n\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false)\r\n            }\r\n        )\r\n    }\r\n    return (\r\n        <div className={s.profileBlock}>\r\n            <div className={s.ava}>\r\n                <img src={profile.photos.large || userPhoto} alt=\"!\" />\r\n                {isOwner && <input id=\"input\" type={'file'} onChange={onPhotoSelected} />}\r\n                {editMode ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} /> :\r\n                    <div> <ProfileData profile={profile} isOwner={isOwner} onEditMode={() => { setEditMode(true) }} /> </div>}\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                <StatusWithHooks status={status} updateStatus={updateStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, onEditMode }) => {\r\n    return <div>\r\n        <div>\r\n            {isOwner && <button onClick={onEditMode}>Edit</button>}\r\n        </div>\r\n        <div>\r\n            <b>Full Name</b>:  {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>:  {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {\r\n            profile.lookingForAJob &&\r\n            <div>\r\n                <b>Description</b>:  {profile.lookingForAJobDescription}\r\n            </div>\r\n        }\r\n        <div>\r\n            <b>About me</b>:  {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>:  {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n            })}\r\n        </div>\r\n\r\n\r\n    </div >\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return <div className={s.contacts}>\r\n        <b>{contactTitle}</b>: {contactValue}\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo\r\n","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"Myposts_posts__Khf9Q\",\"postsBlock\":\"Myposts_postsBlock__8xARZ\",\"likeCountBlock\":\"Myposts_likeCountBlock__xoDkI\",\"massegeBlock\":\"Myposts_massegeBlock__MX3J-\"};","import React from \"react\";\r\nimport s from \"./Myposts.module.css\"\r\nimport icon from \"../../../assets/img/44884218_345707102882519_2446069589734326272_n.jpg\"\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../../FormsControl/FormsControl\";\r\n\r\n\r\nconst Posts = (props) => {\r\n    return (\r\n        <div className={s.likeCountBlock}>\r\n            <img src={icon} alt=\"!\" />\r\n            <div className={s.massegeBlock}>\r\n                {props.massege}\r\n            </div>\r\n            <div className=\"likeCount\">\r\n                {props.likeCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Myposts = React.memo(props => {\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n\r\n    let postsElements = [...props.posts].reverse().map(p => <Posts massege={p.massege} likeCount={p.likeCount} />)\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <div>\r\n                <h3>My posts</h3>\r\n            </div>\r\n            <div>\r\n                <AddNewPostReduxForm onSubmit={onAddPost} />\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field name=\"newPostText\" component={Textarea} validate={[required, maxLengthCreator(10)]} />\r\n            <button>Add posts</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({ form: \"ProfileAddNewPostForm\" })(AddNewPostForm)\r\n\r\nexport default Myposts","import { addPostActionCreator } from \"../../../redux/profileReducer\"\r\nimport Myposts from \"./Myposts\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n\r\n    }\r\n}\r\nconst MypostsContainer = connect(mapStateToProps, mapDispatchToProps)(Myposts)\r\n\r\nexport default MypostsContainer","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MypostsContainer from \"./Myposts/MypostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto={props.savePhoto} isOwner={props.isOwner} profile={props.profile} status={props.status} updateStatus={props.updateStatus} saveProfile={props.saveProfile} />\r\n            <MypostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserProfile } from \"../../redux/profileReducer\";\r\nimport { Navigate, Route, Routes, useParams } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { getStatus } from \"../../redux/profileReducer\";\r\nimport { updateStatus } from \"../../redux/profileReducer\";\r\nimport { savePhoto } from \"../../redux/profileReducer\";\r\nimport { saveProfile } from \"../../redux/profileReducer\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if (!userId) {\r\n                <Routes>\r\n                    <Route path=\"*\" element={<Navigate to=\"/login\" />} />\r\n                </Routes>\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.params.userId !== prevProps.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile  {...this.props} savePhoto={this.props.savePhoto} isOwner={!this.props.params.userId} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.id,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\n\r\n\r\nconst withRouter = WrappedComponent => props => {\r\n    const params = useParams();\r\n\r\n    return (\r\n        <WrappedComponent\r\n            {...props}\r\n            {...{ params, }}\r\n        />\r\n    );\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate, Route, Routes } from \"react-router-dom\";\r\n\r\nfunction mapStateToPropsforRedirect(state) {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Routes>\r\n                <Route path=\"*\" element={<Navigate to=\"/login\" />} />\r\n            </Routes>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let connectedAuthRedirectComponent = connect(mapStateToPropsforRedirect)(RedirectComponent)\r\n\r\n    return connectedAuthRedirectComponent\r\n}"],"names":["props","editMode","setEditMede","useState","status","setStatus","useEffect","_jsxs","children","_jsx","onDoubleClick","activateEditMode","onChange","e","currentTarget","value","autoFocus","onBlur","deactivateEditMode","updateStatus","reduxForm","form","_ref","handleSubmit","profile","error","onSubmit","className","style","formSummeryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","ProfileData","_ref2","isOwner","onEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","_ref3","s","savePhoto","saveProfile","setEditMode","Preloader","profileBlock","ava","src","photos","large","userPhoto","alt","id","target","files","length","ProfileDataForm","initialValues","formData","then","descriptionBlock","StatusWithHooks","Posts","icon","massege","likeCount","Myposts","React","postsElements","posts","reverse","p","AddNewPostReduxForm","values","addPost","newPostText","Field","name","component","validate","required","maxLengthCreator","connect","state","profilePage","dispatch","addPostActionCreator","ProfileInfo","MypostsContainer","ProfileContainer","refreshProfile","userId","this","params","authorizedUserId","Routes","Route","Navigate","getUserProfile","getStatus","componentDidMount","componentDidUpdate","prevProps","prevState","render","Profile","compose","auth","isAuth","WrappedComponent","useParams","withAuthRedirect","mapStateToPropsforRedirect","Component","RedirectComponent","path","element","to"],"sourceRoot":""}