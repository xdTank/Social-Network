{"version":3,"file":"static/js/39.e27ce7d7.chunk.js","mappings":"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","sources":["webpack://first-project/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://first-project/./src/components/Profile/Myposts/Myposts.module.css?f0a2","components/Profile/Myposts/Myposts.jsx","components/Profile/Myposts/MypostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ava\":\"ProfileInfo_ava__2kiHq\",\"profileBlock\":\"ProfileInfo_profileBlock__nMvag\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2rsaS\"};","import React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nconst StatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMede] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMede(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMede(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode} >{props.status || \"-\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatusWithHooks","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport StatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/img/44884218_345707102882519_2446069589734326272_n.jpg\"\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div className={s.profileBlock}>\r\n            <div className={s.ava}>\r\n                <img src={profile.photos.large != null ? profile.photos.large : userPhoto} alt=\"\" />\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                <StatusWithHooks status={status} updateStatus={updateStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"Myposts_posts__Khf9Q\",\"postsBlock\":\"Myposts_postsBlock__8xARZ\",\"likeCountBlock\":\"Myposts_likeCountBlock__xoDkI\",\"massegeBlock\":\"Myposts_massegeBlock__MX3J-\"};","import React from \"react\";\r\nimport s from \"./Myposts.module.css\"\r\nimport icon from \"../../../assets/img/44884218_345707102882519_2446069589734326272_n.jpg\"\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { TextArea } from \"../../../FormsControl/FormsControl\";\r\n\r\n\r\nconst Posts = (props) => {\r\n    return (\r\n        <div className={s.likeCountBlock}>\r\n            <img src={icon} alt=\"!\" />\r\n            <div className={s.massegeBlock}>\r\n                {props.massege}\r\n            </div>\r\n            <div className=\"likeCount\">\r\n                {props.likeCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Myposts = React.memo(props => {\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n\r\n    let postsElements = [...props.posts].reverse().map(p => <Posts massege={p.massege} likeCount={p.likeCount} />)\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <div>\r\n                <h3>My posts</h3>\r\n            </div>\r\n            <div>\r\n                <AddNewPostReduxForm onSubmit={onAddPost} />\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field name=\"newPostText\" component={TextArea} validate={[required, maxLengthCreator(10)]} />\r\n            <button>Add posts</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({ form: \"ProfileAddNewPostForm\" })(AddNewPostForm)\r\n\r\nexport default Myposts","import { addPostActionCreator } from \"../../../redux/profileReducer\"\r\nimport Myposts from \"./Myposts\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n\r\n    }\r\n}\r\nconst MypostsContainer = connect(mapStateToProps, mapDispatchToProps)(Myposts)\r\n\r\nexport default MypostsContainer","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MypostsContainer from \"./Myposts/MypostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MypostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserProfile } from \"../../redux/profileReducer\";\r\nimport { Navigate, Route, Routes, useParams } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { getStatus } from \"../../redux/profileReducer\";\r\nimport { updateStatus } from \"../../redux/profileReducer\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if (!userId) {\r\n                <Routes>\r\n                    <Route path=\"*\" element={<Navigate to=\"/login\" />} />\r\n                </Routes>\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.id,\r\n        isAuth: state.auth.isAuth,\r\n        userId: state.auth.id\r\n    }\r\n}\r\n\r\n\r\n\r\nconst withRouter = WrappedComponent => props => {\r\n    const params = useParams();\r\n\r\n    return (\r\n        <WrappedComponent\r\n            {...props}\r\n            {...{ params, }}\r\n        />\r\n    );\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate, Route, Routes } from \"react-router-dom\";\r\n\r\nfunction mapStateToPropsforRedirect(state) {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Routes>\r\n                <Route path=\"*\" element={<Navigate to=\"/login\" />} />\r\n            </Routes>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let connectedAuthRedirectComponent = connect(mapStateToPropsforRedirect)(RedirectComponent)\r\n\r\n    return connectedAuthRedirectComponent\r\n}"],"names":["props","editMode","setEditMede","useState","status","setStatus","useEffect","_jsxs","children","_jsx","onDoubleClick","activateEditMode","onChange","e","currentTarget","value","autoFocus","onBlur","deactivateEditMode","updateStatus","_ref","profile","className","s","src","photos","large","userPhoto","alt","StatusWithHooks","Preloader","Posts","icon","massege","likeCount","Myposts","React","postsElements","posts","reverse","map","p","AddNewPostReduxForm","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","name","component","TextArea","validate","required","maxLengthCreator","connect","state","profilePage","dispatch","addPostActionCreator","ProfileInfo","MypostsContainer","ProfileContainer","componentDidMount","userId","this","authorizedUserId","Routes","Route","Navigate","getUserProfile","getStatus","render","Profile","compose","auth","id","isAuth","WrappedComponent","params","useParams","withAuthRedirect","mapStateToPropsforRedirect","Component","RedirectComponent","path","element","to"],"sourceRoot":""}