{"version":3,"file":"static/js/398.5d5af670.chunk.js","mappings":"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","sources":["../node_modules/@ant-design/icons-svg/es/asn/SendOutlined.js","../node_modules/@ant-design/icons/es/icons/SendOutlined.js","pages/chat/chat.tsx"],"sourcesContent":["// This icon file is generated automatically.\nvar SendOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"defs\", \"attrs\": {}, \"children\": [{ \"tag\": \"style\", \"attrs\": {} }] }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M931.4 498.9L94.9 79.5c-3.4-1.7-7.3-2.1-11-1.2a15.99 15.99 0 00-11.7 19.3l86.2 352.2c1.3 5.3 5.2 9.6 10.4 11.3l147.7 50.7-147.6 50.7c-5.2 1.8-9.1 6-10.3 11.3L72.2 926.5c-.9 3.7-.5 7.6 1.2 10.9 3.9 7.9 13.5 11.1 21.5 7.2l836.5-417c3.1-1.5 5.6-4.1 7.2-7.1 3.9-8 .7-17.6-7.2-21.6zM170.8 826.3l50.3-205.6 295.2-101.3c2.3-.8 4.2-2.6 5-5 1.4-4.2-.8-8.7-5-10.2L221.1 403 171 198.2l628 314.9-628.2 313.2z\" } }] }, \"name\": \"send\", \"theme\": \"outlined\" };\nexport default SendOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport SendOutlinedSvg from \"@ant-design/icons-svg/es/asn/SendOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar SendOutlined = function SendOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: SendOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  SendOutlined.displayName = 'SendOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(SendOutlined);","import { Avatar, Button, Form, Input } from \"antd\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n    SendOutlined,\r\n    UserOutlined,\r\n} from '@ant-design/icons';\r\nimport { ChatMessageAPIType } from \"../../api/chat-api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { sendMessage, startChating, stopChating, } from \"../../redux/chatReducer\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AppStateType } from \"../../redux/reduxStore\";\r\nimport { selectIsAuth } from \"../../redux/authSelectors\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nexport const Chat: React.FC = () => {\r\n    const dispatch = useDispatch<any>()\r\n    const status = useSelector((state: AppStateType) => state.chat.status)\r\n    const isAuth = useSelector(selectIsAuth)\r\n    const navigate = useNavigate()\r\n    useEffect(() => {\r\n        if (!isAuth) {\r\n            navigate('/login');\r\n        }\r\n    }, [isAuth, navigate])\r\n\r\n    useEffect(() => {\r\n        dispatch(startChating())\r\n        return () => {\r\n            dispatch(stopChating())\r\n        }\r\n    }, [dispatch])\r\n    return (\r\n        <div >\r\n            {status === 'error' && <div> Some error occured. Please refresh the page</div>}\r\n            <Messages />\r\n            <AddMessageForm />\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nexport const Messages: React.FC = () => {\r\n    const messages = useSelector((state: AppStateType) => state.chat.messages)\r\n    const messagesAnchorRef = useRef<HTMLDivElement>(null)\r\n    const [isAutoScroll, setIsAutoScroll] = useState(true)\r\n\r\n    const scrollHandler = (e: React.UIEvent<HTMLDivElement, UIEvent>) => {\r\n        let element = e.currentTarget\r\n        const atBottom = element.scrollHeight - element.scrollTop === element.clientHeight;\r\n        setIsAutoScroll(atBottom);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isAutoScroll) {\r\n            messagesAnchorRef.current?.scrollIntoView({ behavior: 'smooth', inline: 'end' })\r\n        }\r\n    }, [isAutoScroll])\r\n    return (\r\n        <div style={{ height: '78vh', overflowY: 'auto' }} onScroll={scrollHandler}>\r\n            {messages.map((m: ChatMessageAPIType) => <Message key={m.userId} message={m} />\r\n            )}\r\n            <div ref={messagesAnchorRef}></div>\r\n        </div>\r\n    )\r\n}\r\nexport const Message: React.FC<{ message: ChatMessageAPIType }> = React.memo(({ message }) => {\r\n\r\n    return (\r\n        <div style={{ margin: '20px', display: 'flex', alignItems: 'center' }}>\r\n            <Avatar icon={<UserOutlined />} src={message.photo} style={{ width: '30px', marginRight: '10px' }} />\r\n            <div>\r\n                <div style={{ display: 'flex', alignItems: 'center', marginBottom: '5px' }}>\r\n                    <b style={{ marginRight: '10px' }}>{message.userName}</b>\r\n                </div>\r\n                <p style={{ marginBottom: '5px' }}>{message.message}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\nexport const AddMessageForm: React.FC = () => {\r\n    const [message, setMessage] = useState('')\r\n    const dispatch = useDispatch<any>()\r\n    const status = useSelector((state: AppStateType) => state.chat.status)\r\n\r\n\r\n    const sendMessageHandler = () => {\r\n        console.log(status)\r\n        if (!message) {\r\n            return\r\n        }\r\n        console.log(message)\r\n        dispatch(sendMessage(message))\r\n        setMessage('')\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            onFinish={sendMessageHandler}\r\n            layout=\"inline\"\r\n            style={{ paddingTop: '10px' }}\r\n        >\r\n            <Form.Item style={{ width: '100%' }} >\r\n                <Input suffix={\r\n                    <Button type=\"text\" style={{ backgroundColor: 'transparent', color: '#fff', textAlign: 'center', display: 'flex', alignItems: 'center', left: '15px' }}>\r\n                        <SendOutlined />\r\n                    </Button>} disabled={status !== 'ready'} style={{\r\n                        backgroundColor: '#383A40',\r\n                        border: 'none',\r\n                        color: '#C7CACE',\r\n                    }} placeholder=\"Write\" onChange={(e) => setMessage(e.currentTarget.value)} value={message}></Input>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}"],"names":["SendOutlined","props","ref","React","AntdIcon","_extends","icon","SendOutlinedSvg","Chat","dispatch","useDispatch","status","useSelector","state","chat","isAuth","selectIsAuth","navigate","useNavigate","useEffect","startChating","stopChating","_jsxs","children","_jsx","Messages","AddMessageForm","messages","messagesAnchorRef","useRef","isAutoScroll","setIsAutoScroll","useState","_messagesAnchorRef$cu","current","scrollIntoView","behavior","inline","style","height","overflowY","onScroll","e","element","currentTarget","atBottom","scrollHeight","scrollTop","clientHeight","map","m","Message","message","userId","_ref","margin","display","alignItems","Avatar","UserOutlined","src","photo","width","marginRight","marginBottom","userName","setMessage","Form","onFinish","sendMessageHandler","console","log","sendMessage","layout","paddingTop","Item","Input","suffix","Button","type","backgroundColor","color","textAlign","left","disabled","border","placeholder","onChange","value"],"sourceRoot":""}